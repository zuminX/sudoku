<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sudoku.project.mapper.UserGameInformationMapper">
  <resultMap id="BaseResultMap" type="com.sudoku.project.model.entity.UserGameInformation">
    <!--@Table user_game_information-->
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="total" jdbcType="INTEGER" property="total"/>
    <result column="correct_number" jdbcType="INTEGER" property="correctNumber"/>
    <result column="average_spend_time" jdbcType="INTEGER" property="averageSpendTime"/>
    <result column="min_spend_time" jdbcType="INTEGER" property="minSpendTime"/>
    <result column="max_spend_time" jdbcType="INTEGER" property="maxSpendTime"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="sudoku_level_id" jdbcType="INTEGER" property="sudokuLevelId"/>
  </resultMap>

  <resultMap id="RankItemBOMap" type="com.sudoku.project.model.bo.RankItemBO">
    <result column="sudoku_level_id" property="sudokuLevelId"/>
    <collection property="rankItemDataList" ofType="com.sudoku.project.model.bo.RankItemDataBO">
      <result column="username" property="username"/>
      <result column="data" property="data"/>
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    id,
    total,
    correct_number,
    average_spend_time,
    min_spend_time,
    max_spend_time,
    user_id,
    sudoku_level_id
  </sql>

  <sql id="RankCorrectNumberItemData">
    WITH tmp as (
        select sl.name,
            u.username,
            ugi.sudoku_level_id,
            ugi.correct_number,
            row_number() over ( partition by sl.name order by ugi.correct_number desc) as rn
    from user_game_information ugi
        inner join user u on ugi.user_id = u.id
        inner join sudoku_level sl on ugi.sudoku_level_id = sl.id
    where ugi.correct_number > 0)
  </sql>

  <sql id="RankAverageSpendTimeItemData">
    WITH tmp as (
        select sl.name,
            u.username,
            ugi.sudoku_level_id,
            ugi.average_spend_time,
            row_number() over ( partition by sl.name order by ugi.average_spend_time) as rn
    from user_game_information ugi
        inner join user u on ugi.user_id = u.id
        inner join sudoku_level sl on ugi.sudoku_level_id = sl.id
    where ugi.average_spend_time is not null)
  </sql>

  <sql id="RankMinSpendTimeItemData">
    WITH tmp as (
        select sl.name,
            u.username,
            ugi.sudoku_level_id,
            ugi.min_spend_time,
            row_number() over ( partition by sl.name order by ugi.min_spend_time) as rn
    from user_game_information ugi
        inner join user u on ugi.user_id = u.id
        inner join sudoku_level sl on ugi.sudoku_level_id = sl.id
    where ugi.min_spend_time is not null)
  </sql>

  <sql id="RankItemDataCondition">
    where
    rn  <![CDATA[<=]]> ${limitNumber}
  </sql>

  <sql id="Rank_Item_Column_List">
    `sudoku_level_id`,
    any_value(`username`) as username,
    any_value(`rn`)       as rn
  </sql>

  <insert id="batchInsertByUserIdAndSudokuLevelIds">
    insert into user_game_information (user_id, sudoku_level_id)
      values
    <foreach collection="sudokuLevelIds" item="item" separator=",">
      (#{userId,jdbcType=INTEGER}, #{item,jdbcType=INTEGER})
    </foreach>
  </insert>

  <insert id="insertDefaultByUserId">
    insert into user_game_information (user_id, sudoku_level_id)
    select #{userId,jdbcType=INTEGER} as `user_id`, `id` as `sudoku_level_id`
    from sudoku_level
  </insert>

  <select id="selectByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_game_information
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectByUserIdAndSudokuLevelId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_game_information
    where user_id = #{userId,jdbcType=INTEGER}
      and sudoku_level_id = #{sudokuLevelId,jdbcType=INTEGER}
  </select>

  <select id="selectAverageSpendTimeRanking" resultMap="RankItemBOMap">
    <include refid="RankAverageSpendTimeItemData" />
    select any_value(average_spend_time) as data,
    <include refid="Rank_Item_Column_List"/>
    from tmp
    <include refid="RankItemDataCondition"/>
  </select>

  <select id="selectMinSpendTimeRanking" resultMap="RankItemBOMap">
    <include refid="RankMinSpendTimeItemData" />
    select any_value(min_spend_time) as data,
    <include refid="Rank_Item_Column_List"/>
    from tmp
    <include refid="RankItemDataCondition"/>
  </select>

  <select id="selectCorrectNumberRanking" resultMap="RankItemBOMap">
    <include refid="RankCorrectNumberItemData" />
    select any_value(correct_number) as data,
    <include refid="Rank_Item_Column_List"/>
    from tmp
    <include refid="RankItemDataCondition"/>
  </select>

  <update id="updateByUserIdAndSudokuLevelId">
    update user_game_information
    <set>
      <if test="updated.id != null">
        id = #{updated.id,jdbcType=INTEGER},
      </if>
      <if test="updated.total != null">
        total = #{updated.total,jdbcType=INTEGER},
      </if>
      <if test="updated.correctNumber != null">
        correct_number = #{updated.correctNumber,jdbcType=INTEGER},
      </if>
      <if test="updated.averageSpendTime != null">
        average_spend_time = #{updated.averageSpendTime,jdbcType=INTEGER},
      </if>
      <if test="updated.minSpendTime != null">
        min_spend_time = #{updated.minSpendTime,jdbcType=INTEGER},
      </if>
      <if test="updated.maxSpendTime != null">
        max_spend_time = #{updated.maxSpendTime,jdbcType=INTEGER},
      </if>
      <if test="updated.userId != null">
        user_id = #{updated.userId,jdbcType=INTEGER},
      </if>
      <if test="updated.sudokuLevelId != null">
        sudoku_level_id = #{updated.sudokuLevelId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
      and sudoku_level_id = #{sudokuLevelId,jdbcType=INTEGER}
  </update>

  <update id="updateTotalByUserIdAndSudokuLevelId">
    update user_game_information
    set total=#{updatedTotal,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
      and sudoku_level_id = #{sudokuLevelId,jdbcType=INTEGER}
  </update>
</mapper>